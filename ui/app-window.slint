import { ComboBox, SpinBox, Button, CheckBox, Slider, LineEdit, ScrollView, ListView, HorizontalBox, VerticalBox, GridBox, StandardButton, Palette } from "std-widgets.slint";

@rust-attr(derive(serde::Serialize, serde::Deserialize))
export struct TodoItem  {
    title: string,
    checked: bool,
    is-dir: bool,
    full_path: string,
}


export component AppWindow inherits Window {
    in-out property <string> path: "/home/jord/coding/texturizers";
    in-out property <string> image-path: "";
    callback go-to-parent() -> string;
    callback glob-path();
    callback setimg(path: string);

    in property original-image <=> original.source;

    in-out property <[TodoItem]> todo-model: [];
    title: "Texturize.rs";
    VerticalBox {
        HorizontalLayout {
            height: 30px;
            Button {
                private property <string> parent;
                parent: "";
                text: "ðŸ „";
                clicked => {
                    self.parent = go-to-parent();
                    debug("New: " + self.parent);
                    le.text = root.path;
                }
            }

            le := LineEdit {
                text: root.path;

                init() => {
                    self.focus();
                    root.glob-path();
                }
                edited(new) => {
                    root.path = "\{new}";
                    root.glob-path();
                }
            }
        }

        HorizontalLayout {
            ListView {
                for todo in root.todo-model: HorizontalLayout {
                    padding-bottom: 3px;
                    Button {
                        private property <bool> was-clicked;
                        in-out property <bool> is-dir;
                        was-clicked: false;
                        height: 30px;
                        width: parent.width;
                        text: todo.title;
                        checked: todo.checked;
                        is-dir: todo.is-dir;

                        clicked() => {
                            if (self.was-clicked && self.is-dir) {
                                root.path = "\{root.path}" + "\{todo.title}";
                                le.text = root.path;
                                root.glob-path();
                            }
                            setimg(self.text);
                            self.was-clicked = true;
                        }
                    }
                }
            }

            HorizontalBox {
                min-width: 800px;
                original := Image { }
            }
        }
    }
}
